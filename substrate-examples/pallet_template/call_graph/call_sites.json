{
  "files": [
    "substrate-examples/pallet_template/src/lib.rs",
    "/home/sproll/.cargo/git/checkouts/substrate-7e08433d4c370a21/3bb3882/frame/system/src/lib.rs",
    "/rustc/2f2c438dce75d8cc532c3baa849eeddc0901802c/library/core/src/result.rs",
    "substrate-examples/pallet_template/src/mock.rs",
    "/rustc/2f2c438dce75d8cc532c3baa849eeddc0901802c/library/alloc/src/rc.rs",
    "/rustc/2f2c438dce75d8cc532c3baa849eeddc0901802c/library/core/src/convert/mod.rs",
    "/home/sproll/.cargo/git/checkouts/substrate-7e08433d4c370a21/3bb3882/frame/support/src/dispatch.rs",
    "substrate-examples/pallet_template/src/mirai.rs",
    "/rustc/2f2c438dce75d8cc532c3baa849eeddc0901802c/library/core/src/clone.rs",
    "/rustc/2f2c438dce75d8cc532c3baa849eeddc0901802c/library/alloc/src/boxed.rs",
    "/rustc/2f2c438dce75d8cc532c3baa849eeddc0901802c/library/core/src/ptr/mod.rs",
    "/rustc/2f2c438dce75d8cc532c3baa849eeddc0901802c/library/alloc/src/alloc.rs",
    "/rustc/2f2c438dce75d8cc532c3baa849eeddc0901802c/library/core/src/intrinsics.rs"
  ],
  "callables": [
    {
      "name": "/pallet_template/pallet::Pallet::<T>::do_something_without_macro(<T as frame_system::Config>::RuntimeOrigin,u32)->std::result::Result<(), sp_runtime::DispatchError>",
      "file_index": 0,
      "first_line": 134,
      "local": true
    },
    {
      "name": "/frame_system/frame_system::ensure_signed(OuterOrigin)->std::result::Result<AccountId, mock::sp_api_hidden_includes_construct_runtime::hidden_include::error::BadOrigin>",
      "file_index": 1,
      "first_line": 923,
      "local": true
    },
    {
      "name": "/core/<std::result::Result<T, F> as std::ops::FromResidual<std::result::Result<std::convert::Infallible, E>>>::from_residual(std::result::Result<std::convert::Infallible, E>)->std::result::Result<T, F>",
      "file_index": 2,
      "first_line": 1959,
      "local": true
    },
    {
      "name": "/pallet_template/<mock::RuntimeOrigin as std::clone::Clone>::clone(&mock::RuntimeOrigin)->mock::RuntimeOrigin",
      "file_index": null,
      "first_line": null,
      "local": true
    },
    {
      "name": "/pallet_template/pallet::Pallet::<T>::sarp_put_sensitive_value(&<T as frame_system::Config>::RuntimeOrigin,u32)->std::result::Result<(), sp_runtime::DispatchError>",
      "file_index": 0,
      "first_line": 150,
      "local": true
    },
    {
      "name": "/pallet_template/<mock::RuntimeOrigin as mock::sp_api_hidden_includes_construct_runtime::hidden_include::traits::OriginTrait>::reset_filter(&mut mock::RuntimeOrigin)->()",
      "file_index": null,
      "first_line": null,
      "local": true
    },
    {
      "name": "/alloc/std::rc::Rc::<T>::new(T)->std::rc::Rc<T>",
      "file_index": 4,
      "first_line": 372,
      "local": true
    },
    {
      "name": "/pallet_template/<mock::RuntimeOrigin as mock::sp_api_hidden_includes_construct_runtime::hidden_include::traits::OriginTrait>::signed(<mock::RuntimeOrigin as mock::sp_api_hidden_includes_construct_runtime::hidden_include::traits::OriginTrait>::AccountId)->mock::RuntimeOrigin",
      "file_index": null,
      "first_line": null,
      "local": true
    },
    {
      "name": "/core/<T as std::convert::Into<U>>::into(T)->U",
      "file_index": 5,
      "first_line": 716,
      "local": true
    },
    {
      "name": "/pallet_template/mock::RuntimeOrigin::signed(<mock::Test as frame_system::Config>::AccountId)->mock::RuntimeOrigin",
      "file_index": null,
      "first_line": null,
      "local": true
    },
    {
      "name": "/pallet_template/<mock::RuntimeOrigin as std::convert::From<frame_system::RawOrigin<<mock::Test as frame_system::Config>::AccountId>>>::from(frame_system::RawOrigin<<mock::Test as frame_system::Config>::AccountId>)->mock::RuntimeOrigin",
      "file_index": null,
      "first_line": null,
      "local": true
    },
    {
      "name": "/pallet_template/<mock::RuntimeOrigin as std::convert::From<mock::OriginCaller>>::from(mock::OriginCaller)->mock::RuntimeOrigin",
      "file_index": null,
      "first_line": null,
      "local": true
    },
    {
      "name": "/alloc/<std::rc::Rc<T> as std::clone::Clone>::clone(&std::rc::Rc<T>)->std::rc::Rc<T>",
      "file_index": 4,
      "first_line": 1640,
      "local": true
    },
    {
      "name": "/pallet_template/<mock::OriginCaller as std::clone::Clone>::clone(&mock::OriginCaller)->mock::OriginCaller",
      "file_index": null,
      "first_line": null,
      "local": true
    },
    {
      "name": "/frame_support/<frame_system::RawOrigin<AccountId> as std::clone::Clone>::clone(&frame_system::RawOrigin<AccountId>)->frame_system::RawOrigin<AccountId>",
      "file_index": 6,
      "first_line": 71,
      "local": true
    },
    {
      "name": "/alloc/<std::rc::Rc<T> as std::ops::Drop>::drop(&mut std::rc::Rc<T>)->()",
      "file_index": 4,
      "first_line": 1604,
      "local": true
    },
    {
      "name": "/pallet_template/mirai::mirai_check::code_to_analyze()->()",
      "file_index": 7,
      "first_line": 6,
      "local": true
    },
    {
      "name": "/pallet_template/mock::<impl std::convert::From<mock::RuntimeOrigin> for std::result::Result<frame_system::RawOrigin<<mock::Test as frame_system::Config>::AccountId>, mock::RuntimeOrigin>>::from(mock::RuntimeOrigin)->std::result::Result<frame_system::RawOrigin<<mock::Test as frame_system::Config>::AccountId>, mock::RuntimeOrigin>",
      "file_index": null,
      "first_line": null,
      "local": true
    },
    {
      "name": "/core/<T as std::convert::From<T>>::from(T)->T",
      "file_index": 5,
      "first_line": 726,
      "local": true
    },
    {
      "name": "/core/std::clone::impls::<impl std::clone::Clone for u64>::clone(&u64)->u64",
      "file_index": 8,
      "first_line": 181,
      "local": false
    },
    {
      "name": "/alloc/<std::boxed::Box<T, A> as std::ops::Drop>::drop(&mut std::boxed::Box<T, A>)->()",
      "file_index": 9,
      "first_line": 1214,
      "local": true
    },
    {
      "name": "/core/std::ptr::drop_in_place(*mut T)->()",
      "file_index": 10,
      "first_line": 491,
      "local": true
    },
    {
      "name": "/alloc/<std::alloc::Global as std::alloc::Allocator>::deallocate(&std::alloc::Global,std::ptr::NonNull<u8>,std::alloc::Layout)->()",
      "file_index": 11,
      "first_line": 244,
      "local": false
    },
    {
      "name": "/alloc/std::rc::RcInnerPtr::inc_strong(&Self)->()",
      "file_index": 4,
      "first_line": 2626,
      "local": true
    },
    {
      "name": "/alloc/std::rc::RcInnerPtr::strong(&Self)->usize",
      "file_index": 4,
      "first_line": 2621,
      "local": true
    },
    {
      "name": "/alloc/<std::rc::RcBox<T> as std::rc::RcInnerPtr>::strong_ref(&std::rc::RcBox<T>)->&std::cell::Cell<usize>",
      "file_index": 4,
      "first_line": 2694,
      "local": true
    },
    {
      "name": "/core/std::intrinsics::unlikely(bool)->bool",
      "file_index": 12,
      "first_line": 977,
      "local": false
    },
    {
      "name": "/core/std::intrinsics::abort()->!",
      "file_index": 12,
      "first_line": 919,
      "local": false
    },
    {
      "name": "/alloc/std::rc::RcInnerPtr::weak(&Self)->usize",
      "file_index": 4,
      "first_line": 2654,
      "local": true
    },
    {
      "name": "/alloc/<std::rc::RcBox<T> as std::rc::RcInnerPtr>::weak_ref(&std::rc::RcBox<T>)->&std::cell::Cell<usize>",
      "file_index": 4,
      "first_line": 2689,
      "local": true
    },
    {
      "name": "/alloc/std::boxed::Box::<T>::new(T)->std::boxed::Box<T>",
      "file_index": 9,
      "first_line": 215,
      "local": true
    },
    {
      "name": "/alloc/sp_core::bounded_collections::alloc::alloc::exchange_malloc(usize,usize)->*mut u8",
      "file_index": 11,
      "first_line": 322,
      "local": false
    }
  ],
  "calls": [
    [
      0,
      137,
      23,
      0,
      1
    ],
    [
      0,
      137,
      23,
      0,
      2
    ],
    [
      0,
      137,
      37,
      0,
      3
    ],
    [
      0,
      139,
      13,
      0,
      4
    ],
    [
      0,
      139,
      13,
      0,
      2
    ],
    [
      3,
      13,
      1,
      5,
      6
    ],
    [
      3,
      13,
      1,
      7,
      8
    ],
    [
      3,
      13,
      1,
      9,
      7
    ],
    [
      3,
      13,
      1,
      10,
      8
    ],
    [
      3,
      13,
      1,
      11,
      5
    ],
    [
      3,
      13,
      1,
      3,
      12
    ],
    [
      3,
      13,
      1,
      13,
      14
    ],
    [
      3,
      13,
      1,
      5,
      15
    ],
    [
      7,
      7,
      17,
      16,
      0
    ],
    [
      7,
      7,
      60,
      16,
      9
    ],
    [
      5,
      717,
      9,
      8,
      17
    ],
    [
      2,
      1961,
      27,
      2,
      18
    ],
    [
      6,
      71,
      25,
      14,
      19
    ],
    [
      3,
      13,
      1,
      17,
      15
    ],
    [
      1,
      927,
      8,
      1,
      8
    ],
    [
      4,
      383,
      5,
      6,
      20
    ],
    [
      4,
      1609,
      17,
      15,
      21
    ],
    [
      4,
      1616,
      21,
      15,
      22
    ],
    [
      4,
      1642,
      13,
      12,
      23
    ],
    [
      4,
      2622,
      9,
      24,
      25
    ],
    [
      4,
      2627,
      22,
      23,
      24
    ],
    [
      4,
      2638,
      9,
      23,
      25
    ],
    [
      4,
      2643,
      12,
      23,
      26
    ],
    [
      4,
      2644,
      13,
      23,
      27
    ],
    [
      4,
      1606,
      26,
      15,
      24
    ],
    [
      4,
      2655,
      9,
      28,
      29
    ],
    [
      4,
      1613,
      30,
      15,
      28
    ],
    [
      9,
      217,
      9,
      30,
      31
    ],
    [
      4,
      379,
      27,
      6,
      31
    ]
  ]
}